"""	Zipf's song
	https://www.spotify.com/us/jobs/tech/zipfsong/

	Solution by Travis Pennetti	"""

from __future__ import division	# float division for 'quality' calculation
import sys # stdin, exit

def main():
	input_list = []	# This list will store tuples of the two input values.
	line = sys.stdin.readline()	# Read first line to get value of 'n'.
	n, m = line.split(" ", 1)	# Number of songs 'n', number to select 'm'
	input_list.append((n, m))	# Store 'n' and 'm' in input list.

	for _ in range(int(n)):
		line = sys.stdin.readline()
		track_plays, track_name = line.split(" ", 1)
		input_list.append((track_plays, track_name))	# Read 'n' songs.

	zipfs_law(input_list)	# Process the input_list.
	sys.stdout.write('\n');

	sys.exit(0)

def zipfs_law(input_list):
	quality = []	# List of two-tuples containing song names and their
	# respective quality.
	# The number of songs is the first number in the first line of input and
	# the number of songs to select is the second number in the first line of
	# input.  The following line stores those values.
	num_songs, num_select = int(input_list[0][0]), int(input_list[0][1])
	# The first songs is used as a reference songs for Zipf's Law.  The ith
	# song is expected to be listened to 1 / ref_song as many times as the
	# first song.  Consequently, the first song may not be chosen.
	ref_song = float(input_list[1][0])
	for i in range(1, num_songs + 1):	# Since the first line of input is the
	# number of songs, start from index 1 and end one after the indicated
	# number of songs.
		# Calculate quality.  Plays / First song plays / i
		q_i = float(input_list[i][0]) / (float(ref_song) / float(i))
		# Add quality and corresponding song name to the list 'quality'
		quality.append((str(input_list[i][1]),q_i))
	# Sort the songs based on quality in reverse order (hence the -float(x[1]))
	# where x is the tuple and index 1 is the second element.
	quality.sort(key=lambda x: -float(x[1]))
	quality = quality[:num_select]	# Remove songs that will not be selected.
	for i in range(len(quality)):	# For each songs selected,
		sys.stdout.write(str(quality[i][0]).strip())# print out the song name.
		if i != len(quality)-1: sys.stdout.write('\n')

if __name__ == "__main__": main()	# Run the main function.